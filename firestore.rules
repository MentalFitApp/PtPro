rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ==================== FUNZIONI ====================
    function isValidPayment() {
      return request.resource.data.keys().hasAll(['amount', 'duration', 'paymentDate']) &&
             request.resource.data.amount is number &&
             request.resource.data.amount > 0 &&
             request.resource.data.duration is string &&
             request.resource.data.paymentDate is timestamp &&
             (!request.resource.data.keys().hasAny(['paymentMethod']) || request.resource.data.paymentMethod is string);
    }

    function isAdmin() {
      return request.auth != null && (
        !exists(/databases/$(database)/documents/roles/admins) ||
        (exists(/databases/$(database)/documents/roles/admins) && 
         request.auth.uid in get(/databases/$(database)/documents/roles/admins).data.uids)
      );
    }

    function isCoach() {
      return isAdmin() ||
             (request.auth != null &&
              exists(/databases/$(database)/documents/roles/coaches) &&
              request.auth.uid in get(/databases/$(database)/documents/roles/coaches).data.uids);
    }

    function isClient(userId) {
      return request.auth != null && request.auth.uid == userId &&
             exists(/databases/$(database)/documents/clients/$(userId)) &&
             get(/databases/$(database)/documents/clients/$(userId)).data.isClient == true;
    }

    function isAssignedCoach(userId) {
      return request.auth != null &&
             exists(/databases/$(database)/documents/clients/$(userId)) &&
             (get(/databases/$(database)/documents/clients/$(userId)).data.assignedCoaches || []).hasAny([request.auth.uid]);
    }

    function isCollaboratore(userId) {
      return request.auth != null && request.auth.uid == userId &&
             exists(/databases/$(database)/documents/collaboratori/$(userId));
    }

    // ==================== REGOLE COLLEZIONI ====================

    // --- CLIENTS ---
    match /clients/{userId} {
      allow create: if isCoach() || isAdmin();
      allow read: if request.auth != null && (
                    request.auth.uid == userId ||
                    isCoach() ||
                    isAdmin() ||
                    (get(/databases/$(database)/documents/clients/$(userId)).data.isOldClient == true && isAssignedCoach(userId))
                  );
      allow list: if isCoach() || isAdmin();
      allow update: if isCoach() || isAdmin() || isClient(userId);
      allow delete: if isAdmin();

      // --- ANAMNESI ---
      match /anamnesi/{docId} {
        allow read: if request.auth != null && (
                      request.auth.uid == userId ||
                      isCoach() ||
                      isAdmin() ||
                      (get(/../clients/$(userId)).data.isOldClient == true && isAssignedCoach(userId))
                    );
        allow write: if request.auth != null && (
                      request.auth.uid == userId ||
                      isAssignedCoach(userId)
                    );
      }

      // --- CHECKS ---
      match /checks/{docId} {
        allow read: if request.auth != null && (
                      request.auth.uid == userId ||
                      isCoach() ||
                      isAdmin() ||
                      (get(/../clients/$(userId)).data.isOldClient == true && isAssignedCoach(userId))
                    );
        allow write: if request.auth != null && (
                      request.auth.uid == userId ||
                      isAssignedCoach(userId)
                    );
      }

      // --- PAYMENTS ---
      match /payments/{docId} {
        allow read: if request.auth != null && (
                      request.auth.uid == userId ||
                      isCoach() ||
                      isAdmin() ||
                      (get(/../clients/$(userId)).data.isOldClient == true && isAssignedCoach(userId))
                    );
        allow create, update: if (isCoach() || isAdmin()) && isValidPayment();
        allow delete: if isCoach() || isAdmin();
      }
    }

    // --- SUBCOLLEZIONI GENERICHE (fallback sicuro) ---
    match /{path=**}/payments/{paymentId} {
      allow read: if isCoach() || isAdmin();
    }
    match /{path=**}/checks/{checkId} {
      allow read: if isCoach() || isAdmin();
    }
    match /{path=**}/anamnesi/{anamnesiId} {
      allow read: if isCoach() || isAdmin();
    }

    // --- CHATS ---
    match /chats/{chatId} {
      allow get: if request.auth != null && (request.auth.uid in resource.data.participants || isCoach() || isAdmin());
      allow list: if request.auth != null && (isCoach() || isAdmin() || request.auth.uid in resource.data.participants);
      allow create: if request.auth != null &&
                     request.auth.uid in request.resource.data.participants &&
                     request.resource.data.participants.size() == 2;
      allow update: if request.auth != null && (request.auth.uid in resource.data.participants || isCoach() || isAdmin());
      allow delete: if isCoach() || isAdmin();

      match /messages/{messageId} {
        allow read: if request.auth != null &&
                      (request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants || isCoach() || isAdmin());
        allow create: if request.auth != null &&
                      (request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants || isCoach() || isAdmin());
        allow update, delete: if isCoach() || isAdmin();
      }
    }

    // --- ROLES ---
    match /roles/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // --- APP-DATA ---
    match /app-data/{docId} {
      allow read, write: if isCoach() || isAdmin();
    }

    // --- COLLABORATORI ---
    match /collaboratori/{collabId} {
      allow read, list: if isAdmin() || isCollaboratore(collabId);
      allow create: if isAdmin();
      allow update: if isCollaboratore(collabId) || isAdmin();
      allow delete: if isAdmin();
    }

    // --- MARKETING REPORTS ---
    match /marketingReports/{reportId} {
      allow read, list, create, update, delete: if isAdmin();
    }

    // --- SALES REPORTS ---
    match /salesReports/{reportId} {
      allow read, list, create, update, delete: if isAdmin();
    }

    // --- LEADS ---
    match /leads/{leadId} {
      allow read, list: if isAdmin() ||
        (request.auth != null &&
         exists(/databases/$(database)/documents/collaboratori/$(request.auth.uid)) &&
         resource.data.collaboratoreId == request.auth.uid);
      allow create: if request.auth != null &&
        exists(/databases/$(database)/documents/collaboratori/$(request.auth.uid)) &&
        request.resource.data.collaboratoreId == request.auth.uid;
      allow update: if isAdmin() ||
        (request.auth != null &&
         exists(/databases/$(database)/documents/collaboratori/$(request.auth.uid)) &&
         resource.data.collaboratoreId == request.auth.uid);
      allow delete: if isAdmin();
    }
  }
}